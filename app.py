
import streamlit as st
import pandas as pd
from modules.geocode import geocode_address
import folium
from streamlit_folium import st_folium
from io import BytesIO

st.set_page_config(layout="wide")
st.title("–ö–æ–Ω—Ç—Ä–æ–ª—å –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ | –ú–û–°–≠–ù–ï–†–ì–û–°–ë–´–¢")

uploaded_file = st.file_uploader("üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel-—Ñ–∞–π–ª —Å –∞–¥—Ä–µ—Å–∞–º–∏ –∏ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—è–º–∏", type=["xlsx"])
if uploaded_file:
    df = pd.read_excel(uploaded_file)
    st.subheader("üìã –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    st.dataframe(df)

    # –ì–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
    st.subheader("üåê –ì–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–æ–≤")
    coords = []
    for index, row in df.iterrows():
        addr = row.get("–ê–¥—Ä–µ—Å")
        if pd.notna(addr):
            lat, lon = geocode_address(addr)
            coords.append((lat, lon))
        else:
            coords.append((None, None))

    df["lat"] = [c[0] for c in coords]
    df["lon"] = [c[1] for c in coords]

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
    st.subheader("üó∫Ô∏è –ö–∞—Ä—Ç–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤")
    m = folium.Map(location=[df["lat"].mean(), df["lon"].mean()], zoom_start=12)
    for _, row in df.iterrows():
        if pd.notna(row["lat"]) and pd.notna(row["lon"]):
            folium.Marker(
                location=[row["lat"], row["lon"]],
                popup=f"{row['–ê–¥—Ä–µ—Å']}\n–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å: {row['–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å']} ‚ÇΩ",
                icon=folium.Icon(color="blue")
            ).add_to(m)
    st_folium(m, width=900, height=600)

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
    st.subheader("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    output = BytesIO()
    df.to_excel(output, index=False)
    st.download_button(
        label="‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å Excel —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏",
        data=output.getvalue(),
        file_name="updated_clients.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )
